on: push
jobs:
  Flake8Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install flake8
        run:  pip install flake8
        
      - name : Check code with Flake8
        run: flake8 ./src/app_test.py

  Editor-Conf-Check:
    runs-on: ubuntu-latest
    steps:
      - name: Check Editor-Conf file
        uses: wow-rp-addons/actions-editorconfig-check@v1.0.1
        with: 
            files: .editorconfig 
      
  SnykTest:
    runs-on: ubuntu-latest
    needs: [Flake8Test, Editor-Conf-Check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run Snyk Security Check
        working-directory: ${{github.workspace}}/src
        run: |
          pip install -r requirements.txt
          npm install -g snyk
          snyk auth ${{secrets.SNYK_TOKEN}}
          snyk test
          
  SonarCloudTest:
    runs-on: ubuntu-latest
    needs: [Flake8Test, Editor-Conf-Check]
    permissions:
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Build_Push:
    runs-on: ubuntu-latest
    needs: [SnykTest, SonarCloudTest]
    permissions:
     packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 
        
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Build an image
        run: docker build -t "my_first_app" .

      - name: AquaSec Trivy
        uses: aquasecurity/trivy-action@0.13.1
        with:
          image-ref: "my_first_app"
          scan-ref: .  #its the default code
          exit-code: 1
          timeout: 3m0s
          vuln-type: "os,library" #optional, default
          severity: "CRITICAL,HIGH"        
        
      - name: Tag an image 
        run: docker tag my_first_app silvavd02/dev-ops-exercises:latest

      - name: Push Image to Dockerhub  
        run: docker push silvavd02/dev-ops-exercises:latest
   



